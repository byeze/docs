openapi: 3.0.0
info:
  title: "Kausanna API"
  description: |
    Bienvenido a Kausana, el servicio ofrecido por SONQO, dedicado a procesar los contracargos de tus clientes en tiempo real, 
    brindando una solución integral que te permite concentrarte en tu negocio sin preocuparte por la complejidad de las redes de 
    Visa y Mastercard.

    En el mundo de los negocios, los contracargos pueden ser una preocupación constante para los comercios y las empresas.
    La necesidad de enfrentar disputas de pagos, desconocimientos o reclamaciones de clientes puede ser un desafío significativo,
    especialmente cuando se trabaja con múltiples proveedores de tarjetas y redes de pago.
    Es en este punto donde Kausana se convierte en tu mejor aliado.

    Nuestra plataforma Kausana se ha desarrollado pensando en la simplicidad y eficiencia, 
    ofreciendo un sistema escalable y seguro que te permitirá manejar los contracargos de manera rápida y efectiva.
    Olvídate de la complejidad técnica y los detalles burocráticos, Kausana se encarga de abstraer toda la
    complejidad de las redes de Visa y Mastercard para que puedas enfocarte en lo que realmente importa: hacer crecer tu negocio.

    Verificá el estado de nuestras APIs en [Kausana Status](https://kausana.instatus.com/)
  version: 4.0.10
  contact:
    email: ongoing-processes@sonqo.io
  x-logo:
    url: "https://www.naranjax.com/assets/img/logo-nx.svg"
    altText: "SONQO Logo"
servers:
  - url: https://e1-kausana.sonqo.io
  - url: https://e3-kausana.sonqo.io
  - url: https://kausana.sonqo.io
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: >-
        API Token generated for your account. The token must be prefixed with
        `Bearer `.

  schemas:
    PaymentDataPrivacyEncrypted:
      type: object
      properties:
        data:
          type: string
          description: Encrypted data content.
          example: "test"
        origin:
          type: string
          description: Origin of the data encryption.
          example: "non_present"
      description: "Contains details about the data privacy and encryption."

    PaymentMethod:
      type: object
      properties:
        data_privacy:
          type: object
          properties:
            encrypted:
              $ref: "#/components/schemas/PaymentDataPrivacyEncrypted"
          description: "Details about the privacy and encryption of payment data."
        card_method_type:
          type: string
          description: Type of card method used.
          example: "encrypted"
        card_holder_name:
          type: string
          description: Name of the card holder.
          example: "Test"
        card_holder_doc_type:
          type: string
          description: Type of document of the card holder.
          example: "DNI"
        type:
          type: string
          description: Type of payment.
          example: "card_payment"
        expiration_date:
          type: string
          description: Expiration date of the card.
          example: "04/2029"
        card_type:
          type: string
          description: Type of card used.
          example: "DEBIT"
        card_holder_email:
          type: string
          description: Email of the card holder.
          example: "Test@google.com"
        expiration_year:
          type: string
          description: Expiration year of the card.
          example: "2029"
        product_id:
          type: string
          description: Product identifier.
          example: "MASTERCARD"
        expiration_month:
          type: string
          description: Expiration month of the card.
          example: "04"
        name:
          type: string
          description: Name of the payment product.
          example: "MASTERCARD"
        pan:
          type: string
          description: Partially masked PAN number.
          example: "553771******3011"
        card_holder_doc_number:
          type: string
          description: Document number of the card holder.
          example: "002839234234"
      description: "Contains all details about the payment method used."

    Contact:
      type: object
      properties:
        email:
          type: string
          description: Contact email address.
          example: "No data"
        phone:
          type: string
          description: Contact phone number.
          example: "No data"
        businessName:
          type: string
          description: Business name of the contact.
          example: "EZEQUIEL CALONGE"
        country:
          type: string
          description: Country of the contact.
          example: "ARG"
      description: "Contact details for the merchant."

    Address:
      type: object
      properties:
        country:
          type: string
          description: Country of the address.
          example: "ARG"
        address:
          type: object
          properties:
            number:
              type: string
              description: Street number of the address.
              example: "135"
            notes:
              type: string
              description: Additional notes about the address.
              example: "-"
            street:
              type: string
              description: Street name of the address.
              example: "Luis piedra buena"
          description: "Detailed street address."
        city:
          type: string
          description: City of the address.
          example: "CHIVILCOY"
        name:
          type: string
          description: Name associated with the address.
          example: "LINK DE PAGO"
        id:
          type: string
          description: Identifier of the address.
          example: "c231a73b-b1f5-4b1a-b049-675876938605"
        state:
          type: string
          description: State or province of the address.
          example: "B"
        zip_code:
          type: string
          description: ZIP or postal code of the address.
          example: "B6620AAA"
      description: "Address details of the merchant."

    Merchant:
      type: object
      properties:
        storeId:
          type: string
          description: Unique identifier of the store.
          example: "6546e6b2-b0ce-4159-addf-f0147ce08bc4"
        ownerId:
          type: string
          description: Unique identifier of the owner.
          example: "c6efebfb-b5ba-4e17-8ece-c8c47d27ddf8"
        name:
          type: string
          description: Name of the merchant.
          example: "Catdog"
        mcc:
          type: string
          description: Merchant category code.
          example: "7311"
        taxId:
          type: string
          description: Tax identification number of the merchant.
          example: "23395567659"
        taxIdType:
          type: string
          description: Type of tax identification number.
          example: "arg.cuit"
        externalPaymentId:
          type: string
          description: External identifier for the payment.
          example: "8524623"
        paymentData:
          $ref: "#/components/schemas/PaymentMethod"
        contact:
          $ref: "#/components/schemas/Contact"
        address:
          $ref: "#/components/schemas/Address"
      description: "Contains all the information related to a merchant, including payment and contact details."

    Claim:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            id:
              type: string
              example: "207779219414"
              description: Unique identifier for the claim.
            primaryAccountNumber:
              type: string
              example: "5450********6048"
              description: Primary account number for the transaction.
            merchantId:
              type: string
              example: "000000000010377"
              description: Unique identifier for the merchant.
            amount:
              type: number
              example: 1000.00
            currency:
              type: string
              example: ARS
              description: ISO 4217 currency code.
            outcome:
              type: string
              example: in_progress
              description: The current outcome. Indicates the current status of the claim. If the merchant won or lost the claim.
              enum:
                - in_progress
                - won
                - lost
            transactionId:
              type: string
              example: >-
                TI:FIEaEgnM3bwPijwZgjc3Te+Y0ieLbN9ijUugqNSvJmVbO1xs6Jh5iIlmpOpkbax79L8Yj1rBOWBACx+Vj17rzvOepWobpgWNJNdsgHB4ag=#hqCnaMDqmto4wnL+BSUKSdzROqGJ7YELoKhEvluycwKNg3XTzSfaIJhFDkl9hW081B5tTqFFiAwCpcocPdB2My4t7DtSTk63VXDl1CySA8Y=
              description: Unique identifier for the transaction. For Mastercard, the transaction ID contains 2 parts separated by a `#`. The first part is the clearing transaction ID and the second part is the authorization transaction ID.
            issuerId:
              type: string
              example: 00000006195
              description: Identifier for the issuer of the chargeback.
            acquirerId:
              type: string
              example: 006355
              description: Identifier for the acquirer of the chargeback.
            partnerId:
              type: string
              example: "01HNBCE7RY395G62BCQFYDCV46"
              description: Kausanna partner identifier.
            seen:
              type: boolean
              example: false
              description: Indicates if the claim has been seen by the merchant / partner service.
            events:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    example: CREATED
                    description: Name of the event.
                  timestamp:
                    type: string
                    format: date-time
              example: >-
                [
                  {
                    "name": "CREATED",
                    "timestamp": "2024-03-04T21:41:41.292Z"
                  },
                  {
                    "name": "SECOND_PRESENTATION_STARTED",
                    "timestamp": "2024-03-04T21:41:41.292Z"
                  }
                ]
              description: Array of events related to the claim.
            origin:
              type: string
              example: mastercard
              description: The origin of the claim. Indicates if the claim was originated from Visa, Mastercard or other network.
            authCode:
              type: string
              example: ab3285c5
              description: Authorization code for the transaction.
            flow:
              type: object
              properties:
                currentStep:
                  type: string
                  example: PENDING_REVIEW
                  description: The current step in the claim flow.
            merchant:
              type: object
              properties:
                name:
                  type: string
                  example: Elves Boutique
                  description: Name of the merchant.
                mcc:
                  type: string
                  example: 5611
                  description: Merchant category code.
                taxId:
                  type: string
                  example: 30123456789
                  description: Tax identification number of the merchant.
                taxIdType:
                  type: string
                  example: arg.cuit
                  description: Type of tax identification number. For Argentina, it is `arg.cuit`. The format is `country.code`.
                paymentData:
                  $ref: "#/components/schemas/PaymentMethod"
                contact:
                  $ref: "#/components/schemas/Contact"
                address:
                  $ref: "#/components/schemas/Address"
    ChargebackCase:
      type: object
      properties:
        openClaims:
          type: array
          items:
            type: string
          description: Array of open claim identifiers.
        amount:
          type: number
          description: Amount involved in the transaction.
          example: 100.99
        lastModifiedDate:
          type: string
          description: The last date when the case was modified.
        refundReversalCurrency:
          type: string
          description: Currency of the refund reversal.
        lastModifiedBy:
          type: string
          description: Identifier for the last modifier of the case.
        claimId:
          type: string
          description: Unique identifier for the claim.
        transactionId:
          type: string
          description: Unique identifier for the transaction.
        retrievalRequestId:
          type: string
          description: Unique identifier for the retrieval request.
        issuerId:
          type: string
          description: Identifier for the issuer of the chargeback.
        chargebackReferenceNumber:
          type: string
          description: Reference number for the chargeback.
        isOpen:
          type: string
          description: Status indicating if the case is open.
        currency:
          type: string
          description: Currency of the transaction.
          example: ARS
        issuerResponseCode:
          type: string
          description: Response code from the issuer.
        issuerRejectReasonCode:
          type: string
          description: Reason code for rejection by the issuer.
        status:
          type: string
          description: Current status of the chargeback case.
        mcData:
          type: object
          properties:
            caseFilingRespHistory:
              type: array
              items: {}
              description: History of responses for the case filing.
            clearingNetwork:
              type: string
              description: Clearing network information.
            standardClaims:
              type: array
              items:
                type: string
              description: Array of standard claim identifiers.
            chargebackDetails:
              type: array
              items:
                type: object
                properties:
                  chargebackId:
                    type: string
                    description: Unique identifier for the chargeback.
                  editExclusionCode:
                    type: string
                    description: Exclusion code for editing the chargeback.
                  japanCommonMerchantCode:
                    type: string
                    description: Common merchant code for Japan.
                  chargebackRefNum:
                    type: string
                    description: Reference number for the chargeback.
                  documentIndicator:
                    type: string
                    description: Indicator for the document status.
                  refundNotReceivedIndicator:
                    type: string
                    description: Indicator for refund not received status.
                  isPartialChargeback:
                    type: boolean
                    description: Indicates if it is a partial chargeback.
                  rejectReason:
                    type: string
                    description: Reason for rejection of the chargeback.
                  installmentData:
                    type: string
                    description: Installment data related to the chargeback.
                  currency:
                    type: string
                    description: Currency of the chargeback amount.
                  documentStatus:
                    type: string
                    description: Status of the document related to the chargeback.
                  reasonCode:
                    type: string
                    description: Reason code for the chargeback.
                  createDate:
                    type: string
                    description: Creation date of the chargeback record.
                  messageText:
                    type: string
                    description: Text message related to the chargeback case.
                  amount:
                    type: string
                    description: Amount of the chargeback.
                  reconciliationCurrency:
                    type: string
                    description: Currency used for reconciliation.
                  currencyConversionAssessmentCCAIncluded:
                    type: string
                    description: Indicates if currency conversion assessment CCA is included.
                  chargebackType:
                    type: string
                    description: Type of the chargeback.
                  claimId:
                    type: string
                    description: Unique identifier for the claim related to the chargeback.
                  flexCode:
                    type: string
                    description: Flex code related to the chargeback case.
                  creditVoucherStatus:
                    type: string
                    description: Status of the credit voucher.
                  reversal:
                    type: boolean
                    description: Indicates if the chargeback has been reversed.
                  reconciliationAmount:
                    type: string
                    description: Amount used for reconciliation.
                  currencyConversionAssessmentCCAAmount:
                    type: string
                    description: Amount for currency conversion assessment CCA.
                  reversed:
                    type: boolean
                    description: Indicates if the chargeback has been reversed.
          description: Mastercard specific data related to the chargeback case.

security:
  - bearerAuth: []
paths:
  /partner/{partnerId}/subscriptions:
    post:
      summary: Crear una subscripción webhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  example: https://webhook.site/e52e639b-80b7-4493-9588-4ba8d883a945
                subscribedEvents:
                  type: array
                  items:
                    type: string
                    example: chargeback.created
                isActive:
                  type: boolean
                  example: true
              example:
                isActive: true
                url: https://webhook.site/e52e639b-80b7-4493-9588-4ba8d883a945
                subscribedEvents:
                  - chargeback.created
      parameters:
        - name: partnerId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the partner registered to receive webhooks
          example: "006837"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01H69QTYGPZCFWJJMQC9HDC9PC
                      url:
                        type: string
                        example: https://google.com
                      secret:
                        type: string
                        example: sq_2Wn5QwBo8x3RTOF-az0_f52e5TUzwh0waOAqAtwtht4
                      subscribedEvents:
                        type: array
                        items:
                          type: string
                          example: chargeback.created
                      partnerId:
                        type: string
                        example: "006837"
                      isActive:
                        type: boolean
                        example: true
                      createdAt:
                        type: string
                        example: "2023-07-26T18:37:01.334Z"
                      updatedAt:
                        type: string
                        example: "2023-07-26T18:37:01.334Z"
              example:
                success: true
                data:
                  id: 01H69QTYGPZCFWJJMQC9HDC9PC
                  url: https://google.com
                  secret: sq_2Wn5QwBo8x3RTOF-az0_f52e5TUzwh0waOAqAtwtht4
                  subscribedEvents:
                    - chargeback.created
                  partnerId: "006837"
                  isActive: true
                  createdAt: "2023-07-26T18:37:01.334Z"
                  updatedAt: "2023-07-26T18:37:01.334Z"
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                success: false
                code: VALIDATION_ERROR
                error:
                  - code: invalid_string
                    validation:
                      startsWith: https://
                    message: >-
                      Webhook URL must be HTTPS. Only secure connections are
                      allowed.
                    path:
                      - url
    get:
      tags:
        - partner > {partnerId}
      summary: Obtener subscripciones webhook
      parameters:
        - name: isActive
          in: query
          schema:
            type: boolean
          example: "true"
        - name: partnerId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the partner registered to receive webhooks
          example: "006837"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: "200"
                  value:
                    success: true
                    count: 1
                    data:
                      - id: 01H69QY2PXZS6RV33JRZF20PZ1
                        url: https://google.com
                        subscribedEvents:
                          - chargeback.created
                        partnerId: "006837"
                        isActive: true
                        createdAt: "2023-07-26T18:38:43.941Z"
                        updatedAt: "2023-07-26T18:38:43.942Z"
                example-1:
                  summary: "200: no subscriptions"
                  value:
                    success: true
                    count: 0
                    data: []
  /partner/{partnerId}/subscriptions/{subscriptionId}:
    delete:
      tags:
        - partner > {partnerId}
      summary: Eliminar una subscripción webhook
      parameters:
        - name: partnerId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the partner registered to receive webhooks
          example: "006837"
        - name: subscriptionId
          in: path
          schema:
            type: string
          required: true
          description: The ID of the webhook subscription
          example: 01H9V3F4XJF0PBS2PEVBF01ZA9
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                success: false
                exception: Not Found
                code: PARTNER.PARTNER_SUBSCRIPTION_NOT_FOUND
                message: Subscription not found in your account
  /partner/{partnerId}/subscriptions/test:
    post:
      tags:
        - partner > {partnerId}
      summary: Probar las subscripciones webhook
      description: Test the webhook integration by sending a JSON test message.
      requestBody:
        content: {}
      parameters:
        - name: partnerId
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the partner registered to receive webhooks
          example: "006837"
      responses:
        "200":
          description: Successful test
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
        "409":
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                success: false
                code: PARTNER.TEST_PARTNER_SUBSCRIPTION_ERROR
                message: Error sending test webhook to some subscriptions
  /claims/{claimId}/status:
    put:
      tags:
        - claims > {claimId}
      summary: Actualizar el estado de una reclamación
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: REJECTED
                  enum:
                    - ACCEPTED
                    - REJECTED
              example:
                status: REJECTED
      parameters:
        - name: claimId
          in: path
          schema:
            type: integer
          required: true
          example: "200002031927"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indica si la operación fue exitosa
                  transitionedTo:
                    type: string
                    description: El estado al que se ha cambiado la reclamación
                  data:
                    type: object
              example:
                success: true
                transitionedTo: COLLABORATION_REJECTED
                data: {}
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  exception:
                    type: string
                    example: Bad Request
                  code:
                    type: string
                    example: VALIDATION_ERROR
                  message:
                    type: string
                    example: Validation error
                  issues:
                    type: array
                    items:
                      type: object
                      properties:
                        received:
                          type: string
                          example: ACCEPTED-1
                        code:
                          type: string
                          example: invalid_enum_value
                        options:
                          type: array
                          items:
                            type: string
                            example: ACCEPTED
                        path:
                          type: array
                          items:
                            type: string
                            example: status
                        message:
                          type: string
                          example: >-
                            Invalid enum value. Expected 'ACCEPTED' | 'REJECTED',
                            received 'ACCEPTED-1'
              examples:
                example-0:
                  summary: "400: Validation Error"
                  value:
                    success: false
                    exception: Bad Request
                    code: VALIDATION_ERROR
                    message: Validation error
                    issues:
                      - received: ACCEPTED-1
                        code: invalid_enum_value
                        options:
                          - ACCEPTED
                          - REJECTED
                        path:
                          - status
                        message: >-
                          Invalid enum value. Expected 'ACCEPTED' | 'REJECTED',
                          received 'ACCEPTED-1'
                example-1:
                  summary: "400: Not pending action"
                  value:
                    success: false
                    exception: Bad Request
                    code: KAUSANA.CLAIM_NOT_PENDING_MERCHANT_ACTION
                    message: Claim is not pending merchant action
        "403":
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  exception:
                    type: string
                    example: Forbidden
                  code:
                    type: string
                    example: KAUSANA.REJECTED_CLAIMS_NOT_IMPLEMENTED
                  message:
                    type: string
                    example: Rejected claims are not implemented yet
              example:
                success: false
                exception: Forbidden
                code: KAUSANA.REJECTED_CLAIMS_NOT_IMPLEMENTED
                message: Rejected claims are not implemented yet
        "404":
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  exception:
                    type: string
                    example: Not Found
                  code:
                    type: string
                    example: KAUSANA.CLAIM_NOT_FOUND
                  message:
                    type: string
                    example: Claim not found
              example:
                success: false
                exception: Not Found
                code: KAUSANA.CLAIM_NOT_FOUND
                message: Claim not found
  /claims/{claimId}/documentation:
    get:
      summary: Obtener documentación subida de un reclamo
      parameters:
        - name: claimId
          in: path
          schema:
            type: integer
          required: true
          example: "207779219414"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: >-
                            https://documentations-bucket-develop.s3.us-east-1.amazonaws.com/...
                          description: The URL of the file
                        name:
                          type: string
                          example: 1707395243157/01HP7F44S1S92E63MZ5Z4QC114.png
                          description: The name of the file
                        status:
                          type: string
                          example: unapproved
                          description: The status of the file. Our IA will review the file and approve or reject it.
                          enum:
                            - approved
                            - unapproved
                  quantity:
                    type: integer
                    example: 1
                example:
                  success: true
                  data:
                    - url: https://documentations-bucket-develop.s3.us-east-1.amazonaws.com/...
                      name: 1707395243157/01HP7F44S1S92E63MZ5Z4QC114.png
                      status: unapproved
                  quantity: 1
    post:
      tags:
        - claims > {claimId}
      summary: Subir documentación de una reclamación
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                extension: png
              properties:
                extension:
                  type: string
                  example: png
                  enum:
                    - png
                    - jpg
                    - jpeg
      parameters:
        - name: claimId
          in: path
          schema:
            type: integer
          required: true
          example: "207779219414"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
                url: >-
                  https://first-presentation-document-bucket-develop.s3.us-east-1.amazonaws.com/1234567890/...
  /claims/{claimId}/documentation/finish:
    post:
      summary: Finalizar la subida de documentación de un reclamo. Cuando se finaliza la subida de documentación, se notifica al sistema que la documentación está completa y se puede proceder con la revisión por parte de las marcas.
      parameters:
        - name: claimId
          in: path
          schema:
            type: integer
          required: true
          example: "207779219414"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates success of operation
                example:
                  success: true
  /claims/{claimId}:
    get:
      tags:
        - claims > {claimId}
      summary: Obtener información de una reclamación
      parameters:
        - name: x-api-key
          in: header
          schema:
            type: string
          example: "{{apiKey}}"
        - name: claimId
          in: path
          schema:
            type: integer
          required: true
          example: "1706540942200"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Claim"
              example:
                success: true
                data:
                  id: "200213896369"
                  primaryAccountNumber: 5450********6048
                  origin: mastercard
                  outcome: in_progress
                  authCode: HOSTOK
                  rrn: "08032053255308260050318"
                  status: SECOND_PRESENTATION_STARTED
                  transactionId: TI:_sWNAY10sn6CItkNj7sQcOBx8wD9FyqjXqv9K3RJclVyLJxlSOk8ZgiPGMdTdi2cXT0gjcknclOWup7aqYtpFhMcsqCGUmhKeFoWLii8944=##ACQ
                  isOpen: true
                  partnerId: 01HNBCE7RY395G62BCQFYDCV46
                  acquirerId: "032314"
                  issuerId: "999029"
                  seen: false
                  events:
                    - name: CREATED
                      timestamp: "2024-03-04T21:41:41.292Z"
                    - name: SECOND_PRESENTATION_STARTED
                      timestamp: "2024-03-04T21:41:41.292Z"
                  createdAt: "2024-03-04T21:41:41.292Z"
                  updatedAt: "2024-03-04T21:52:46.228Z"
                  amount: 900
                  currency: ARS
                  merchant:
                    name: Elves Boutique
                    mcc: "5611"
                    taxId: "30123456789"
                    taxIdType: arg.cuit
                    paymentData:
                      product_id: MASTERCARD
                      expiration_month: "04"
                      name: MASTERCARD
                      pan: 553771******3011
                      card_holder_doc_number: "002839234234"
                    contact:
                      email: No data
                      phone: No data
                      businessName: EZEQUIEL CALONGE
                      country: ARG
                    address:
                      country: ARG
                      address:
                        number: "135"
                        notes: Negocio de ropa
                        street: Luis piedra buena
                      city: CHIVILCOY
                      name: LINK DE PAGO
                      id: c231a73b-b1f5-4b1a-b049-675876938605
                      state: B
                      zip_code: B6620AAA
                  flow:
                    currentStep: SECOND_PRESENTATION_STARTED

  /claims/acquirer/{acquirerId}:
    get:
      tags:
        - claims > acquirer
      summary: Obtener reclamaciónes usando el ID del adquirente
      parameters:
        - name: x-api-key
          in: header
          schema:
            type: string
          example: "{{apiKey}}"
        - name: acquirerId
          in: path
          schema:
            type: integer
          required: true
          example: "006355"
      responses:
        "200":
          description: OK
          headers:
            content-type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Claim"
                  example:
                    success: true
                    data:
                      - id: "200002087418"
                        primaryAccountNumber: 5450********6048
                        origin: mastercard
                        outcome: in_progress
                        authCode: HOSTOK
                        rrn: "08032053255308260050318"
                        status: SECOND_PRESENTATION_STARTED
                        transactionId: TI:_sWNAY10sn6CItkNj7sQcOBx8wD9FyqjXqv9K3RJclVyLJxlSOk8ZgiPGMdTdi2cXT0gjcknclOWup7aqYtpFhMcsqCGUmhKeFoWLii8944=##ACQ
                        isOpen: true
                        partnerId: 01HNBCE7RY395G62BCQFYDCV46
                        acquirerId: "032314"
                        issuerId: "999029"
                        seen: false
                        events:
                          - name: CREATED
                            timestamp: "2024-03-04T21:41:41.292Z"
                          - name: SECOND_PRESENTATION_STARTED
                            timestamp: "2024-03-04T21:41:41.292Z"
                        createdAt: "2024-03-04T21:41:41.292Z"
                        updatedAt: "2024-03-04T21:52:46.228Z"
                        amount: 900
                        currency: ARS

  /claims/acquirer/{acquirerId}/seen:
    post:
      tags:
        - claims > acquirer
      summary: Marcar una reclamación como vista
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                claims:
                  - "200002087418"
      parameters:
        - name: acquirerId
          in: path
          schema:
            type: integer
          required: true
          example: "006355"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 1
              examples:
                example-1:
                  summary: "200: marked as seen"
                  value:
                    message: Claims marked as seen
                    data:
                      total: 1
  /merchants/{merchantId}/claims:
    get:
      tags:
        - claims > merchants
      summary: Obtener reclamaciones usando el ID del comercio
      parameters:
        - name: x-api-key
          in: header
          schema:
            type: string
          example: "key_bd90853656fadc507077e15b4d78d4a989aa8f92287d3ae80ad7d2cea6ace3c1"
          required: true
        - name: merchantId
          in: path
          schema:
            type: integer
          required: true
          example: "200002087418"
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful.
                  data:
                    type: array
                    description: Contains the data of chargeback cases.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Unique identifier for the chargeback case.
                        origin:
                          type: string
                          description: Origin of the chargeback case (e.g., Mastercard).
                        outcome:
                          type: string
                          example: in_progress
                          description: The current outcome. Indicates the current status of the claim. If the merchant won or lost the claim.
                          enum:
                            - in_progress
                            - won
                            - lost
                        partnerId:
                          type: string
                          description: Identifier for the partner involved in the transaction.
                        seen:
                          type: boolean
                          description: Indicates if the chargeback case has been viewed.
                        data:
                          $ref: "#/components/schemas/ChargebackCase"
  /claims/{claimId}/actions/email:
    post:
      tags:
        - claims > actions
      summary: Enviar una notificación de nueva reclamación a un merchant
      description: Necesitarás un plan que contenga la funcionalidad de `mailing` para usar este endpoint.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              example:
                email: eze.calonge@naranjax.com
      parameters:
        - name: claimId
          in: path
          schema:
            type: integer
          required: true
          description: The claim id
          example: "207779219414"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  meta:
                    type: object
                    properties:
                      claimId:
                        type: string
                        example: "207779219414"
              example:
                success: true
                meta:
                  claimId: "207779219414"
